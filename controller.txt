<?php

namespace App\Http\Controllers;

use App\Models\Cast;
use Illuminate\Http\Request;

class CastController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $casts = Cast::all();
        return view('admin.cast', ['casts' => $casts]);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view('admin.cast.add');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        echo "<pre>";

        print_r($request->all());
        $name = $request->name;
        $db_response = Cast::create([
            'name' => $name
        ]);
        if ($db_response) {
            return redirect()->route('cast.index');
        }
    }

    /**
     * Display the specified resource.
     *
     * @param  \App\Models\Cast  $cast
     * @return \Illuminate\Http\Response
     */
    public function show(Cast $cast)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \App\Models\Cast  $cast
     * @return \Illuminate\Http\Response
     */
    public function edit(Cast $cast)
    {
        return view('admin.cast.edit', ['cast' => $cast]);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \App\Models\Cast  $cast
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, Cast $cast)
    {
        $name = $request->name;
        $db_response = Cast::where('id', $cast->id)->update([
            'name' => $name
        ]);
        if ($db_response) {
            return redirect()->route('cast.index');
        }
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\Models\Cast  $cast
     * @return \Illuminate\Http\Response
     */
    public function destroy(Cast $cast)
    {
        $db_response = Cast::where('id', $cast->id)->delete();
        if ($db_response) {
            return redirect()->route('cast.index');
        }
    }
}
<?php

namespace App\Http\Controllers;

use App\Models\Category;
use Illuminate\Http\Request;

class CategoryController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $category = Category::all();
        return view('admin.category', ['category' => $category]);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view("admin.category.add");
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        $name = $request->name;
        $db_response = Category::create([
            'name' => $name
        ]);
        if ($db_response) {
            return redirect()->route('category.index');
        }
    }

    /**
     * Display the specified resource.
     *
     * @param  \App\Models\Category  $category
     * @return \Illuminate\Http\Response
     */
    public function show(Category $category)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \App\Models\Category  $category
     * @return \Illuminate\Http\Response
     */
    public function edit(Category $category)
    {
        return view("admin.category.edit", [
            'category' => $category
        ]);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \App\Models\Category  $category
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, Category $category)
    {

        $name = $request->name;
        $db_response = Category::where('id', $category->id)->update([
            'name' => $name
        ]);
        if ($db_response) {
            return redirect()->route('category.index');
        }
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\Models\Category  $category
     * @return \Illuminate\Http\Response
     */
    public function destroy(Category $category)
    {
        $db_response = Category::where('id', $category->id)->delete();
        if ($db_response) {
            return redirect()->route('category.index');
        }
    }
}
<?php

namespace App\Http\Controllers;

use App\Models\Director;
use Illuminate\Http\Request;

class DirectorController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $directors = Director::all();
        return view('admin.director', ['directors' => $directors]);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view('admin.director.add');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        $name = $request->name;
        $db_response = Director::create([
            'name' => $name
        ]);
        if ($db_response) {
            return redirect()->route('director.index');
        }
    }

    /**
     * Display the specified resource.
     *
     * @param  \App\Models\Director  $director
     * @return \Illuminate\Http\Response
     */
    public function show(Director $director)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \App\Models\Director  $director
     * @return \Illuminate\Http\Response
     */
    public function edit(Director $director)
    {
        return view('admin.director.edit', ['director' => $director]);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \App\Models\Director  $director
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, Director $director)
    {
        $name = $request->name;
        $db_response = Director::where('id', $director->id)->update([
            'name' => $name
        ]);
        if ($db_response) {
            return redirect()->route('director.index');
        }
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\Models\Director  $director
     * @return \Illuminate\Http\Response
     */
    public function destroy(Director $director)
    {
        $db_response = Director::where('id', $director->id)->delete();
        if ($db_response) {
            return redirect()->route('director.index');
        }
    }
}
<?php

namespace App\Http\Controllers;

use App\Models\Genre;
use Illuminate\Http\Request;

class GenreController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $genres = Genre::all();
        return view("admin.genre", ['genres' => $genres]);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view('admin.genre.add');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        $name = $request->name;
        $db_response = Genre::create([
            'name' => $name
        ]);
        if ($db_response) {
            return redirect()->route('genre.index');
        }
    }

    /**
     * Display the specified resource.
     *
     * @param  \App\Models\Genre  $genre
     * @return \Illuminate\Http\Response
     */
    public function show(Genre $genre)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \App\Models\Genre  $genre
     * @return \Illuminate\Http\Response
     */
    public function edit(Genre $genre)
    {
        return view("admin.genre.edit", ['genre' => $genre]);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \App\Models\Genre  $genre
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, Genre $genre)
    {
        $name = $request->name;
        $db_response = Genre::where('id', $genre->id)->update([
            'name' => $name
        ]);
        if ($db_response) {
            return redirect()->route('genre.index');
        }
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\Models\Genre  $genre
     * @return \Illuminate\Http\Response
     */
    public function destroy(Genre $genre)
    {
        $db_response = Genre::where('id', $genre->id)->delete();
        if ($db_response) {
            return redirect()->route('genre.index');
        }
    }
}
<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

class HomeController extends Controller
{
    /**
     * Create a new controller instance.
     *
     * @return void
     */
    public function __construct()
    {
        $this->middleware('auth');
    }

    /**
     * Show the application dashboard.
     *
     * @return \Illuminate\Contracts\Support\Renderable
     */
    public function index()
    {
        return view('home');
    }
}
<?php

namespace App\Http\Controllers;

use App\Models\Language;
use Illuminate\Http\Request;

class LanguageController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $languages = Language::all();
        return view('admin.language', ['languages' => $languages]);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view('admin.language.add');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        $name = $request->name;
        $db_response = Language::create([
            'name' => $name
        ]);
        if ($db_response) {
            return redirect()->route('language.index');
        }
    }

    /**
     * Display the specified resource.
     *
     * @param  \App\Models\Language  $language
     * @return \Illuminate\Http\Response
     */
    public function show(Language $language)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \App\Models\Language  $language
     * @return \Illuminate\Http\Response
     */
    public function edit(Language $language)
    {
        return view('admin.language.edit', ['language' => $language]);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \App\Models\Language  $language
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, Language $language)
    {
        $name = $request->name;
        $db_response = Language::where('id', $language->id)->update([
            'name' => $name
        ]);
        if ($db_response) {
            return redirect()->route('language.index');
        }
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\Models\Language  $language
     * @return \Illuminate\Http\Response
     */
    public function destroy(Language $language)
    {
        $db_response = Language::where('id', $language->id)->delete();
        if ($db_response) {
            return redirect()->route('language.index');
        }
    }
}
<?php

namespace App\Http\Controllers;

use App\Models\Tag;
use App\Models\Cast;
use App\Models\Genre;
use App\Models\Movie;
use App\Models\Writer;
use App\Models\Category;
use App\Models\Director;
use App\Models\Language;
use App\Models\MovieHasTag;
use Illuminate\Support\Str;
use App\Models\MovieHasCast;
use Illuminate\Http\Request;
use App\Models\MovieHasGenre;
use App\Models\MovieHasWriter;
use App\Models\MovieHasCategory;
use App\Models\MovieHasDirector;
use App\Models\MovieHasLanguage;
use Illuminate\Support\Facades\File;

class MovieController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $movies  = Movie::all();
        return view('admin.movie', ['movies' => $movies]);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view('admin.movie.add');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        $title = $request->title;
        $description = $request->description;
        $date = $request->date;
        if ($request->hasFile('img')) {
            $file = $request->file('img');
            $name = 'img' . '-' . Str::uuid() . '.' . $file->getClientOriginalExtension();

            $storage_path = storage_path('app/public/movie-img');
            if (!File::isDirectory($storage_path)) {
                File::makeDirectory($storage_path, 0777, true, true);
            }
            $file->move(storage_path('app/public/movie-img'), $name);
            $movie_img = 'storage/movie-img/' . $name;
        }

        $movie = new Movie();
        $movie->title = $title;
        $movie->description = $description;
        $movie->release_date = $date;
        $movie->image = $movie_img;
        $movie->save();

        return redirect()->route('movie.index');
    }

    /**
     * Display the specified resource.
     *
     * @param  \App\Models\Movie  $movie
     * @return \Illuminate\Http\Response
     */
    public function show(Movie $movie)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \App\Models\Movie  $movie
     * @return \Illuminate\Http\Response
     */
    public function edit(Movie $movie)
    {
        return view('admin.movie.edit', ['movie' => $movie]);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \App\Models\Movie  $movie
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, Movie $movie)
    {
        $title = $request->name;
        $description = $request->description;
        $date = $request->date;
        $movie_img = '';
        if ($request->hasFile('img')) {
            $file = $request->file('img');
            $name = 'img' . '-' . Str::uuid() . '.' . $file->getClientOriginalExtension();

            $storage_path = storage_path('app/public/movie-img');
            if (!File::isDirectory($storage_path)) {
                File::makeDirectory($storage_path, 0777, true, true);
            }
            $file->move(storage_path('app/public/movie-img'), $name);
            $movie_img = 'storage/movie-img/' . $name;
        }

        $movie->title = $title;
        $movie->description = $description;
        $movie->release_date = $date;
        if ($movie_img) {
            $movie->image = $movie_img;
        }
        $movie->save();
        return redirect()->route('movie.index');
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\Models\Movie  $movie
     * @return \Illuminate\Http\Response
     */
    public function destroy(Movie $movie)
    {
        //remove image from storage
        $image_path = $movie->image;
        if (File::exists($image_path)) {
            File::delete($image_path);
        }
        $movie->delete();
        return redirect()->route('movie.index');
    }

    public function details(Request $request, $id)
    {
        $allCast = Cast::all();
        $allCategory = Category::all();
        $allDirector = Director::all();
        $allGenres = Genre::all();
        $allLanguages = Language::all();
        $allTags = Tag::all();
        $allWriters = Writer::all();
        $movie = Movie::find($id);


        return view('admin.movie.prefrences', ['movie_id' => $movie->id, 'allCast' => $allCast, 'allCategory' => $allCategory, 'allDirector' => $allDirector, 'allGenres' => $allGenres, 'allLanguages' => $allLanguages, 'allTags' => $allTags, 'allWriters' => $allWriters]);
    }
    public function update_details(Request $request)
    {
        $movie_id = $request->movie_id;
        $cast = $request->cast;
        $category = $request->category;
        $director = $request->director;
        $genre = $request->genre;
        $language = $request->language;
        $tag = $request->tag;
        $writer = $request->writer;

        if ($cast) {
            $cast_data = [];
            foreach ($cast as $cast_id) {
                $cast_data[] = [
                    'movie_id' => $movie_id,
                    'cast_id' => $cast_id
                ];
            }
            MovieHasCast::insert($cast_data);
        } else {
            MovieHasCast::where('movie_id', $movie_id)->delete();
        }

        if ($category) {
            $category_data = [];
            foreach ($category as $category_id) {
                $category_data[] = [
                    'movie_id' => $movie_id,
                    'category_id' => $category_id
                ];
            }
            MovieHasCategory::insert($category_data);
        } else {
            MovieHasCategory::where('movie_id', $movie_id)->delete();
        }
        if ($director) {
            $director_data = [];
            foreach ($director as $director_id) {
                $director_data[] = [
                    'movie_id' => $movie_id,
                    'director_id' => $director_id
                ];
            }
            MovieHasDirector::insert($director_data);
        } else {
            MovieHasDirector::where('movie_id', $movie_id)->delete();
        }

        if ($genre) {
            $genre_data = [];
            foreach ($genre as $genre_id) {
                $genre_data[] = [
                    'movie_id' => $movie_id,
                    'genre_id' => $genre_id
                ];
            }
            MovieHasGenre::insert($genre_data);
        } else {
            MovieHasGenre::where('movie_id', $movie_id)->delete();
        }
        if ($language) {
            $language_data = [];
            foreach ($language as $language_id) {
                $language_data[] = [
                    'movie_id' => $movie_id,
                    'language_id' => $language_id
                ];
            }
            MovieHasLanguage::insert($language_data);
        } else {
            MovieHasLanguage::where('movie_id', $movie_id)->delete();
        }
        if ($tag) {
            $tag_data = [];
            foreach ($tag as $tag_id) {
                $tag_data[] = [
                    'movie_id' => $movie_id,
                    'tag_id' => $tag_id
                ];
            }
            MovieHasTag::insert($tag_data);
        } else {
            MovieHasTag::where('movie_id', $movie_id)->delete();
        }
        if ($writer) {
            $writer_data = [];
            foreach ($writer as $writer_id) {
                $writer_data[] = [
                    'movie_id' => $movie_id,
                    'writer_id' => $writer_id
                ];
            }
            MovieHasWriter::insert($writer_data);
        } else {
            MovieHasWriter::where('movie_id', $movie_id)->delete();
        }
        return redirect()->route('movie.index');
    }
}
<?php

namespace App\Http\Controllers;

use App\Models\Tag;
use Illuminate\Http\Request;

class TagController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $tags = Tag::all();
        return view('admin.tag', ['tags' => $tags]);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view('admin.tag.add');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        $name = $request->name;
        $db_response = Tag::create([
            'name' => $name
        ]);
        if ($db_response) {
            return redirect()->route('tag.index');
        }
    }

    /**
     * Display the specified resource.
     *
     * @param  \App\Models\Tag  $tag
     * @return \Illuminate\Http\Response
     */
    public function show(Tag $tag)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \App\Models\Tag  $tag
     * @return \Illuminate\Http\Response
     */
    public function edit(Tag $tag)
    {
        return view('admin.tag.edit', ['tag' => $tag]);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \App\Models\Tag  $tag
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, Tag $tag)
    {

        $name = $request->name;
        $db_response = Tag::where('id', $tag->id)->update([
            'name' => $name
        ]);
        if ($db_response) {
            return redirect()->route('tag.index');
        }
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\Models\Tag  $tag
     * @return \Illuminate\Http\Response
     */
    public function destroy(Tag $tag)
    {
        $db_response = Tag::destroy($tag->id);
        if ($db_response) {
            return redirect()->route('tag.index');
        }
    }
}
<?php

namespace App\Http\Controllers;

use App\Models\User;
use Illuminate\Http\Request;

class UserController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $users = User::all();
        return view('admin.user', ['users' => $users]);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        //
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        //
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        //
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        //
    }
}
<?php

namespace App\Http\Controllers;

use App\Models\Writer;
use Illuminate\Http\Request;

class WriterController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $writers = Writer::all();
        return view('admin.writer', ['writers' => $writers]);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view('admin.writer.add');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        $name = $request->name;
        $db_response = Writer::create([
            'name' => $name
        ]);
        if ($db_response) {
            return redirect()->route('writer.index');
        }
    }

    /**
     * Display the specified resource.
     *
     * @param  \App\Models\Writer  $writer
     * @return \Illuminate\Http\Response
     */
    public function show(Writer $writer)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \App\Models\Writer  $writer
     * @return \Illuminate\Http\Response
     */
    public function edit(Writer $writer)
    {
        return view('admin.writer.edit', ['writer' => $writer]);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \App\Models\Writer  $writer
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, Writer $writer)
    {
        $name = $request->name;
        $db_response = Writer::where('id', $writer->id)->update([
            'name' => $name
        ]);
        if ($db_response) {
            return redirect()->route('writer.index');
        }
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\Models\Writer  $writer
     * @return \Illuminate\Http\Response
     */
    public function destroy(Writer $writer)
    {
        $db_response = Writer::where('id', $writer->id)->delete();
        if ($db_response) {
            return redirect()->route('writer.index');
        }
    }
}

